// Main to use dafny Driver with input files instead
// of string.


// import Driver.*;
// import _System.*;
import java.nio.file.Path;
import java.nio.file.Files;
import org.apache.commons.cli.*;
// import org.json.JSONException;
import java.io.IOException;
// import org.json.JSONObject;

// import java.io.IOException;
// import java.math.BigInteger;
import java.nio.file.Files;
import java.nio.file.Path;
// import java.util.List;

public class Driver2 {
  /**
   * This is the code generated by Dafny
   */
  // public static void main(String[] args) {
  //   dafny.Helpers.withHaltHandling(() -> { Driver.__default.__Main(dafny.Helpers.UnicodeFromMainArguments(args)); } );
  // }

  // Based on code from D. Pearce, Dafny-EVM@Consensys

  /**
   * Command line options.
   */
  private static final Option[] OPTIONS = new Option[] {
      new Option("file", true, "The input file."),
      new Option("string", true, "The input string.")
  };

  /**
   * Parse command line options.
   */
  // public static CommandLine parseCommandLine(String[] args) {
  //   // Configure command-line options.
  //   Options options = new Options();
  //   for(Option o : OPTIONS) { options.addOption(o); }
  //   CommandLineParser parser = new DefaultParser();
  //   // use to read Command Line Arguments
  //   HelpFormatter formatter = new HelpFormatter();  // // Use to Format
  //   try {
  //       return parser.parse(options, args);  //it will parse according to the options and parse option value
  //   } catch (ParseException e) {
  //     System.out.println(e.getMessage());
  //     formatter.printHelp("dafnyevm", options);
  //     System.exit(1);
  //     return null;
  //   }
  // }

/**
 *  Run 
 */
// public static void main(String[] args) throws IOException, JSONException {
// 	// Parse command-line arguments.
// 	CommandLine cmd = parseCommandLine(args);
//     String[] newArgs = args;
// 	// Dispatch to requested command
// 	if(cmd.hasOption("file")) {
//     //  Read the file into a String
//     String filename = cmd.getOptionValue("file");
//     System.out.println(filename);
//     // Read its contents as a string.
//     newArgs[1] = Files.readString(Path.of(filename));
//     //  Pass it to Dafny driver
// 	} else if(cmd.hasOption("string")) {
//     //  
//     newArgs[1] = cmd.getOptionValue("string");
//     System.out.println(newArgs[1]);
// 	    // runArbitraryBytecode(cmd);
// 	} else {
// 	  System.out.println("error: must provide either --file or --string argument!");
// 	}
//   //  Run Dafny Driver
//   // Driver.main(newArgs);
//   }
}
