
Dafny program verifier did not attempt verification
Segments:
Segment 0
JUMP/JUMPI: tgt address at the end: 0xf
00000000: PUSH1 0x80
00000002: PUSH1 0x40
00000004: MSTORE
00000005: CALLVALUE
00000006: DUP1
00000007: ISZERO
00000008: PUSH2 0x000f
0000000b: JUMPI
Segment 1
0000000c: PUSH0
0000000d: DUP1
0000000e: REVERT
Segment 2
JUMP/JUMPI: tgt address at the end: 0x29
0000000f: JUMPDEST
00000010: POP
00000011: PUSH1 0x04
00000013: CALLDATASIZE
00000014: LT
00000015: PUSH2 0x0029
00000018: JUMPI
Segment 3
JUMP/JUMPI: tgt address at the end: 0x2d
00000019: PUSH0
0000001a: CALLDATALOAD
0000001b: PUSH1 0xe0
0000001d: SHR
0000001e: DUP1
0000001f: PUSH4 0x12d3d350
00000024: EQ
00000025: PUSH2 0x002d
00000028: JUMPI
Segment 4
00000029: JUMPDEST
0000002a: PUSH0
0000002b: DUP1
0000002c: REVERT
Segment 5
JUMP/JUMPI: tgt address at the end: 0x12d
0000002d: JUMPDEST
0000002e: PUSH2 0x0047
00000031: PUSH1 0x04
00000033: DUP1
00000034: CALLDATASIZE
00000035: SUB
00000036: DUP2
00000037: ADD
00000038: SWAP1
00000039: PUSH2 0x0042
0000003c: SWAP2
0000003d: SWAP1
0000003e: PUSH2 0x012d
00000041: JUMP
Segment 6
JUMP/JUMPI: tgt address at the end: 0x49
00000042: JUMPDEST
00000043: PUSH2 0x0049
00000046: JUMP
Segment 7
00000047: JUMPDEST
00000048: STOP
Segment 8
JUMP/JUMPI: tgt address at the end: 0x5e
00000049: JUMPDEST
0000004a: DUP2
0000004b: DUP2
0000004c: PUSH0
0000004d: SWAP2
0000004e: SWAP1
0000004f: PUSH2 0x0059
00000052: SWAP3
00000053: SWAP2
00000054: SWAP1
00000055: PUSH2 0x005e
00000058: JUMP
Segment 9
JUMP/JUMPI: tgt address at the end: Peek(3)
00000059: JUMPDEST
0000005a: POP
0000005b: POP
0000005c: POP
0000005d: JUMP
Segment 10
JUMP/JUMPI: tgt address at the end: 0x98
0000005e: JUMPDEST
0000005f: DUP3
00000060: DUP1
00000061: SLOAD
00000062: DUP3
00000063: DUP3
00000064: SSTORE
00000065: SWAP1
00000066: PUSH0
00000067: MSTORE
00000068: PUSH1 0x20
0000006a: PUSH0
0000006b: KECCAK256
0000006c: SWAP1
0000006d: DUP2
0000006e: ADD
0000006f: SWAP3
00000070: DUP3
00000071: ISZERO
00000072: PUSH2 0x0098
00000075: JUMPI
Segment 11
CONT: PC of instruction after last is:  0x7c
WeakestPre Operands:3
WeakestPre Capacity:1
Net Stack Effect:0
00000076: SWAP2
00000077: PUSH1 0x20
00000079: MUL
0000007a: DUP3
0000007b: ADD
Segment 12
JUMP/JUMPI: tgt address at the end: 0x97
0000007c: JUMPDEST
0000007d: DUP3
0000007e: DUP2
0000007f: GT
00000080: ISZERO
00000081: PUSH2 0x0097
00000084: JUMPI
Segment 13
JUMP/JUMPI: tgt address at the end: 0x7c
00000085: DUP3
00000086: CALLDATALOAD
00000087: DUP3
00000088: SSTORE
00000089: SWAP2
0000008a: PUSH1 0x20
0000008c: ADD
0000008d: SWAP2
0000008e: SWAP1
0000008f: PUSH1 0x01
00000091: ADD
00000092: SWAP1
00000093: PUSH2 0x007c
00000096: JUMP
Segment 14
CONT: PC of instruction after last is:  0x98
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
00000097: JUMPDEST
Segment 15
JUMP/JUMPI: tgt address at the end: 0xa9
00000098: JUMPDEST
00000099: POP
0000009a: SWAP1
0000009b: POP
0000009c: PUSH2 0x00a5
0000009f: SWAP2
000000a0: SWAP1
000000a1: PUSH2 0x00a9
000000a4: JUMP
Segment 16
JUMP/JUMPI: tgt address at the end: Peek(2)
000000a5: JUMPDEST
000000a6: POP
000000a7: SWAP1
000000a8: JUMP
Segment 17
CONT: PC of instruction after last is:  0xaa
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
000000a9: JUMPDEST
Segment 18
JUMP/JUMPI: tgt address at the end: 0xc0
000000aa: JUMPDEST
000000ab: DUP1
000000ac: DUP3
000000ad: GT
000000ae: ISZERO
000000af: PUSH2 0x00c0
000000b2: JUMPI
Segment 19
JUMP/JUMPI: tgt address at the end: 0xaa
000000b3: PUSH0
000000b4: DUP2
000000b5: PUSH0
000000b6: SWAP1
000000b7: SSTORE
000000b8: POP
000000b9: PUSH1 0x01
000000bb: ADD
000000bc: PUSH2 0x00aa
000000bf: JUMP
Segment 20
JUMP/JUMPI: tgt address at the end: Peek(2)
000000c0: JUMPDEST
000000c1: POP
000000c2: SWAP1
000000c3: JUMP
Segment 21
000000c4: JUMPDEST
000000c5: PUSH0
000000c6: DUP1
000000c7: REVERT
Segment 22
000000c8: JUMPDEST
000000c9: PUSH0
000000ca: DUP1
000000cb: REVERT
Segment 23
000000cc: JUMPDEST
000000cd: PUSH0
000000ce: DUP1
000000cf: REVERT
Segment 24
000000d0: JUMPDEST
000000d1: PUSH0
000000d2: DUP1
000000d3: REVERT
Segment 25
000000d4: JUMPDEST
000000d5: PUSH0
000000d6: DUP1
000000d7: REVERT
Segment 26
JUMP/JUMPI: tgt address at the end: 0xed
000000d8: JUMPDEST
000000d9: PUSH0
000000da: DUP1
000000db: DUP4
000000dc: PUSH1 0x1f
000000de: DUP5
000000df: ADD
000000e0: SLT
000000e1: PUSH2 0x00ed
000000e4: JUMPI
Segment 27
JUMP/JUMPI: tgt address at the end: 0xcc
000000e5: PUSH2 0x00ec
000000e8: PUSH2 0x00cc
000000eb: JUMP
Segment 28
CONT: PC of instruction after last is:  0xed
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
000000ec: JUMPDEST
Segment 29
JUMP/JUMPI: tgt address at the end: 0x10a
000000ed: JUMPDEST
000000ee: DUP3
000000ef: CALLDATALOAD
000000f0: SWAP1
000000f1: POP
000000f2: PUSH8 0xffffffffffffffff
000000fb: DUP2
000000fc: GT
000000fd: ISZERO
000000fe: PUSH2 0x010a
00000101: JUMPI
Segment 30
JUMP/JUMPI: tgt address at the end: 0xd0
00000102: PUSH2 0x0109
00000105: PUSH2 0x00d0
00000108: JUMP
Segment 31
CONT: PC of instruction after last is:  0x10a
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
00000109: JUMPDEST
Segment 32
JUMP/JUMPI: tgt address at the end: 0x126
0000010a: JUMPDEST
0000010b: PUSH1 0x20
0000010d: DUP4
0000010e: ADD
0000010f: SWAP2
00000110: POP
00000111: DUP4
00000112: PUSH1 0x20
00000114: DUP3
00000115: MUL
00000116: DUP4
00000117: ADD
00000118: GT
00000119: ISZERO
0000011a: PUSH2 0x0126
0000011d: JUMPI
Segment 33
JUMP/JUMPI: tgt address at the end: 0xd4
0000011e: PUSH2 0x0125
00000121: PUSH2 0x00d4
00000124: JUMP
Segment 34
CONT: PC of instruction after last is:  0x126
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
00000125: JUMPDEST
Segment 35
JUMP/JUMPI: tgt address at the end: Peek(4)
00000126: JUMPDEST
00000127: SWAP3
00000128: POP
00000129: SWAP3
0000012a: SWAP1
0000012b: POP
0000012c: JUMP
Segment 36
JUMP/JUMPI: tgt address at the end: 0x143
0000012d: JUMPDEST
0000012e: PUSH0
0000012f: DUP1
00000130: PUSH1 0x20
00000132: DUP4
00000133: DUP6
00000134: SUB
00000135: SLT
00000136: ISZERO
00000137: PUSH2 0x0143
0000013a: JUMPI
Segment 37
JUMP/JUMPI: tgt address at the end: 0xc4
0000013b: PUSH2 0x0142
0000013e: PUSH2 0x00c4
00000141: JUMP
Segment 38
CONT: PC of instruction after last is:  0x143
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
00000142: JUMPDEST
Segment 39
JUMP/JUMPI: tgt address at the end: 0x160
00000143: JUMPDEST
00000144: PUSH0
00000145: DUP4
00000146: ADD
00000147: CALLDATALOAD
00000148: PUSH8 0xffffffffffffffff
00000151: DUP2
00000152: GT
00000153: ISZERO
00000154: PUSH2 0x0160
00000157: JUMPI
Segment 40
JUMP/JUMPI: tgt address at the end: 0xc8
00000158: PUSH2 0x015f
0000015b: PUSH2 0x00c8
0000015e: JUMP
Segment 41
CONT: PC of instruction after last is:  0x160
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
0000015f: JUMPDEST
Segment 42
JUMP/JUMPI: tgt address at the end: 0xd8
00000160: JUMPDEST
00000161: PUSH2 0x016c
00000164: DUP6
00000165: DUP3
00000166: DUP7
00000167: ADD
00000168: PUSH2 0x00d8
0000016b: JUMP
Segment 43
JUMP/JUMPI: tgt address at the end: Peek(7)
0000016c: JUMPDEST
0000016d: SWAP3
0000016e: POP
0000016f: SWAP3
00000170: POP
00000171: POP
00000172: SWAP3
00000173: POP
00000174: SWAP3
00000175: SWAP1
00000176: POP
00000177: JUMP
Segment 44
00000178: INVALID 
Segment 45
00000179: LOG2
0000017a: PUSH5 0x6970667358
00000180: INVALID 
Segment 46
00000181: SLT
00000182: KECCAK256
00000183: INVALID 
Segment 47
00000184: MSTORE8
00000185: INVALID 
Segment 48
00000186: INVALID 
Segment 49
00000187: INVALID 
Segment 50
00000188: INVALID 
Segment 51
00000189: INVALID 
Segment 52
0000018a: INVALID 
Segment 53
0000018b: EXTCODECOPY
0000018c: CODECOPY
0000018d: RETURN
Segment 54
CONT: PC of instruction after last is:  0x1ae
WeakestPre Operands:18
WeakestPre Capacity:1
Net Stack Effect:-4
0000018e: CALL
0000018f: DUP12
00000190: PUSH29 0x6868aa8ef988a86e9b16ae147598d6339bbc64736f6c63430008170033
