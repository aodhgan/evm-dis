
Dafny program verifier did not attempt verification
Segments:
Segment 0
JUMP/JUMPI: tgt address at the end: 0xf
00000000: PUSH1 0x80
00000002: PUSH1 0x40
00000004: MSTORE
00000005: CALLVALUE
00000006: DUP1
00000007: ISZERO
00000008: PUSH2 0x000f
0000000b: JUMPI
Segment 1
0000000c: PUSH0
0000000d: DUP1
0000000e: REVERT
Segment 2
JUMP/JUMPI: tgt address at the end: 0x29
0000000f: JUMPDEST
00000010: POP
00000011: PUSH1 0x04
00000013: CALLDATASIZE
00000014: LT
00000015: PUSH2 0x0029
00000018: JUMPI
Segment 3
JUMP/JUMPI: tgt address at the end: 0x2d
00000019: PUSH0
0000001a: CALLDATALOAD
0000001b: PUSH1 0xe0
0000001d: SHR
0000001e: DUP1
0000001f: PUSH4 0x84da92a7
00000024: EQ
00000025: PUSH2 0x002d
00000028: JUMPI
Segment 4
00000029: JUMPDEST
0000002a: PUSH0
0000002b: DUP1
0000002c: REVERT
Segment 5
JUMP/JUMPI: tgt address at the end: 0xc7
0000002d: JUMPDEST
0000002e: PUSH2 0x0047
00000031: PUSH1 0x04
00000033: DUP1
00000034: CALLDATASIZE
00000035: SUB
00000036: DUP2
00000037: ADD
00000038: SWAP1
00000039: PUSH2 0x0042
0000003c: SWAP2
0000003d: SWAP1
0000003e: PUSH2 0x00c7
00000041: JUMP
Segment 6
JUMP/JUMPI: tgt address at the end: 0x49
00000042: JUMPDEST
00000043: PUSH2 0x0049
00000046: JUMP
Segment 7
00000047: JUMPDEST
00000048: STOP
Segment 8
JUMP/JUMPI: tgt address at the end: 0x34c
00000049: JUMPDEST
0000004a: DUP2
0000004b: DUP2
0000004c: PUSH0
0000004d: SWAP2
0000004e: DUP3
0000004f: PUSH2 0x0059
00000052: SWAP3
00000053: SWAP2
00000054: SWAP1
00000055: PUSH2 0x034c
00000058: JUMP
Segment 9
JUMP/JUMPI: tgt address at the end: Peek(3)
00000059: JUMPDEST
0000005a: POP
0000005b: POP
0000005c: POP
0000005d: JUMP
Segment 10
0000005e: JUMPDEST
0000005f: PUSH0
00000060: DUP1
00000061: REVERT
Segment 11
00000062: JUMPDEST
00000063: PUSH0
00000064: DUP1
00000065: REVERT
Segment 12
00000066: JUMPDEST
00000067: PUSH0
00000068: DUP1
00000069: REVERT
Segment 13
0000006a: JUMPDEST
0000006b: PUSH0
0000006c: DUP1
0000006d: REVERT
Segment 14
0000006e: JUMPDEST
0000006f: PUSH0
00000070: DUP1
00000071: REVERT
Segment 15
JUMP/JUMPI: tgt address at the end: 0x87
00000072: JUMPDEST
00000073: PUSH0
00000074: DUP1
00000075: DUP4
00000076: PUSH1 0x1f
00000078: DUP5
00000079: ADD
0000007a: SLT
0000007b: PUSH2 0x0087
0000007e: JUMPI
Segment 16
JUMP/JUMPI: tgt address at the end: 0x66
0000007f: PUSH2 0x0086
00000082: PUSH2 0x0066
00000085: JUMP
Segment 17
CONT: PC of instruction after last is:  0x87
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
00000086: JUMPDEST
Segment 18
JUMP/JUMPI: tgt address at the end: 0xa4
00000087: JUMPDEST
00000088: DUP3
00000089: CALLDATALOAD
0000008a: SWAP1
0000008b: POP
0000008c: PUSH8 0xffffffffffffffff
00000095: DUP2
00000096: GT
00000097: ISZERO
00000098: PUSH2 0x00a4
0000009b: JUMPI
Segment 19
JUMP/JUMPI: tgt address at the end: 0x6a
0000009c: PUSH2 0x00a3
0000009f: PUSH2 0x006a
000000a2: JUMP
Segment 20
CONT: PC of instruction after last is:  0xa4
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
000000a3: JUMPDEST
Segment 21
JUMP/JUMPI: tgt address at the end: 0xc0
000000a4: JUMPDEST
000000a5: PUSH1 0x20
000000a7: DUP4
000000a8: ADD
000000a9: SWAP2
000000aa: POP
000000ab: DUP4
000000ac: PUSH1 0x01
000000ae: DUP3
000000af: MUL
000000b0: DUP4
000000b1: ADD
000000b2: GT
000000b3: ISZERO
000000b4: PUSH2 0x00c0
000000b7: JUMPI
Segment 22
JUMP/JUMPI: tgt address at the end: 0x6e
000000b8: PUSH2 0x00bf
000000bb: PUSH2 0x006e
000000be: JUMP
Segment 23
CONT: PC of instruction after last is:  0xc0
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
000000bf: JUMPDEST
Segment 24
JUMP/JUMPI: tgt address at the end: Peek(4)
000000c0: JUMPDEST
000000c1: SWAP3
000000c2: POP
000000c3: SWAP3
000000c4: SWAP1
000000c5: POP
000000c6: JUMP
Segment 25
JUMP/JUMPI: tgt address at the end: 0xdd
000000c7: JUMPDEST
000000c8: PUSH0
000000c9: DUP1
000000ca: PUSH1 0x20
000000cc: DUP4
000000cd: DUP6
000000ce: SUB
000000cf: SLT
000000d0: ISZERO
000000d1: PUSH2 0x00dd
000000d4: JUMPI
Segment 26
JUMP/JUMPI: tgt address at the end: 0x5e
000000d5: PUSH2 0x00dc
000000d8: PUSH2 0x005e
000000db: JUMP
Segment 27
CONT: PC of instruction after last is:  0xdd
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
000000dc: JUMPDEST
Segment 28
JUMP/JUMPI: tgt address at the end: 0xfa
000000dd: JUMPDEST
000000de: PUSH0
000000df: DUP4
000000e0: ADD
000000e1: CALLDATALOAD
000000e2: PUSH8 0xffffffffffffffff
000000eb: DUP2
000000ec: GT
000000ed: ISZERO
000000ee: PUSH2 0x00fa
000000f1: JUMPI
Segment 29
JUMP/JUMPI: tgt address at the end: 0x62
000000f2: PUSH2 0x00f9
000000f5: PUSH2 0x0062
000000f8: JUMP
Segment 30
CONT: PC of instruction after last is:  0xfa
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
000000f9: JUMPDEST
Segment 31
JUMP/JUMPI: tgt address at the end: 0x72
000000fa: JUMPDEST
000000fb: PUSH2 0x0106
000000fe: DUP6
000000ff: DUP3
00000100: DUP7
00000101: ADD
00000102: PUSH2 0x0072
00000105: JUMP
Segment 32
JUMP/JUMPI: tgt address at the end: Peek(7)
00000106: JUMPDEST
00000107: SWAP3
00000108: POP
00000109: SWAP3
0000010a: POP
0000010b: POP
0000010c: SWAP3
0000010d: POP
0000010e: SWAP3
0000010f: SWAP1
00000110: POP
00000111: JUMP
Segment 33
JUMP/JUMPI: tgt address at the end: Peek(2)
00000112: JUMPDEST
00000113: PUSH0
00000114: DUP3
00000115: SWAP1
00000116: POP
00000117: SWAP3
00000118: SWAP2
00000119: POP
0000011a: POP
0000011b: JUMP
Segment 34
0000011c: JUMPDEST
0000011d: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000
0000013e: PUSH0
0000013f: MSTORE
00000140: PUSH1 0x41
00000142: PUSH1 0x04
00000144: MSTORE
00000145: PUSH1 0x24
00000147: PUSH0
00000148: REVERT
Segment 35
00000149: JUMPDEST
0000014a: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000
0000016b: PUSH0
0000016c: MSTORE
0000016d: PUSH1 0x22
0000016f: PUSH1 0x04
00000171: MSTORE
00000172: PUSH1 0x24
00000174: PUSH0
00000175: REVERT
Segment 36
JUMP/JUMPI: tgt address at the end: 0x18d
00000176: JUMPDEST
00000177: PUSH0
00000178: PUSH1 0x02
0000017a: DUP3
0000017b: DIV
0000017c: SWAP1
0000017d: POP
0000017e: PUSH1 0x01
00000180: DUP3
00000181: AND
00000182: DUP1
00000183: PUSH2 0x018d
00000186: JUMPI
Segment 37
CONT: PC of instruction after last is:  0x18d
WeakestPre Operands:2
WeakestPre Capacity:2
Net Stack Effect:0
00000187: PUSH1 0x7f
00000189: DUP3
0000018a: AND
0000018b: SWAP2
0000018c: POP
Segment 38
JUMP/JUMPI: tgt address at the end: 0x1a0
0000018d: JUMPDEST
0000018e: PUSH1 0x20
00000190: DUP3
00000191: LT
00000192: DUP2
00000193: SUB
00000194: PUSH2 0x01a0
00000197: JUMPI
Segment 39
JUMP/JUMPI: tgt address at the end: 0x149
00000198: PUSH2 0x019f
0000019b: PUSH2 0x0149
0000019e: JUMP
Segment 40
CONT: PC of instruction after last is:  0x1a0
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
0000019f: JUMPDEST
Segment 41
JUMP/JUMPI: tgt address at the end: Peek(3)
000001a0: JUMPDEST
000001a1: POP
000001a2: SWAP2
000001a3: SWAP1
000001a4: POP
000001a5: JUMP
Segment 42
JUMP/JUMPI: tgt address at the end: Peek(1)
000001a6: JUMPDEST
000001a7: PUSH0
000001a8: DUP2
000001a9: SWAP1
000001aa: POP
000001ab: DUP2
000001ac: PUSH0
000001ad: MSTORE
000001ae: PUSH1 0x20
000001b0: PUSH0
000001b1: KECCAK256
000001b2: SWAP1
000001b3: POP
000001b4: SWAP2
000001b5: SWAP1
000001b6: POP
000001b7: JUMP
Segment 43
JUMP/JUMPI: tgt address at the end: Peek(1)
000001b8: JUMPDEST
000001b9: PUSH0
000001ba: PUSH1 0x20
000001bc: PUSH1 0x1f
000001be: DUP4
000001bf: ADD
000001c0: DIV
000001c1: SWAP1
000001c2: POP
000001c3: SWAP2
000001c4: SWAP1
000001c5: POP
000001c6: JUMP
Segment 44
JUMP/JUMPI: tgt address at the end: Peek(2)
000001c7: JUMPDEST
000001c8: PUSH0
000001c9: DUP3
000001ca: DUP3
000001cb: SHL
000001cc: SWAP1
000001cd: POP
000001ce: SWAP3
000001cf: SWAP2
000001d0: POP
000001d1: POP
000001d2: JUMP
Segment 45
JUMP/JUMPI: tgt address at the end: 0x1c7
000001d3: JUMPDEST
000001d4: PUSH0
000001d5: PUSH1 0x08
000001d7: DUP4
000001d8: MUL
000001d9: PUSH2 0x0202
000001dc: PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000001fd: DUP3
000001fe: PUSH2 0x01c7
00000201: JUMP
Segment 46
JUMP/JUMPI: tgt address at the end: 0x1c7
00000202: JUMPDEST
00000203: PUSH2 0x020c
00000206: DUP7
00000207: DUP4
00000208: PUSH2 0x01c7
0000020b: JUMP
Segment 47
JUMP/JUMPI: tgt address at the end: Peek(7)
0000020c: JUMPDEST
0000020d: SWAP6
0000020e: POP
0000020f: DUP1
00000210: NOT
00000211: DUP5
00000212: AND
00000213: SWAP4
00000214: POP
00000215: DUP1
00000216: DUP7
00000217: AND
00000218: DUP5
00000219: OR
0000021a: SWAP3
0000021b: POP
0000021c: POP
0000021d: POP
0000021e: SWAP4
0000021f: SWAP3
00000220: POP
00000221: POP
00000222: POP
00000223: JUMP
Segment 48
JUMP/JUMPI: tgt address at the end: Peek(1)
00000224: JUMPDEST
00000225: PUSH0
00000226: DUP2
00000227: SWAP1
00000228: POP
00000229: SWAP2
0000022a: SWAP1
0000022b: POP
0000022c: JUMP
Segment 49
JUMP/JUMPI: tgt address at the end: Peek(1)
0000022d: JUMPDEST
0000022e: PUSH0
0000022f: DUP2
00000230: SWAP1
00000231: POP
00000232: SWAP2
00000233: SWAP1
00000234: POP
00000235: JUMP
Segment 50
JUMP/JUMPI: tgt address at the end: 0x224
00000236: JUMPDEST
00000237: PUSH0
00000238: PUSH2 0x0250
0000023b: PUSH2 0x024b
0000023e: PUSH2 0x0246
00000241: DUP5
00000242: PUSH2 0x0224
00000245: JUMP
Segment 51
JUMP/JUMPI: tgt address at the end: 0x22d
00000246: JUMPDEST
00000247: PUSH2 0x022d
0000024a: JUMP
Segment 52
JUMP/JUMPI: tgt address at the end: 0x224
0000024b: JUMPDEST
0000024c: PUSH2 0x0224
0000024f: JUMP
Segment 53
JUMP/JUMPI: tgt address at the end: Peek(3)
00000250: JUMPDEST
00000251: SWAP1
00000252: POP
00000253: SWAP2
00000254: SWAP1
00000255: POP
00000256: JUMP
Segment 54
JUMP/JUMPI: tgt address at the end: Peek(1)
00000257: JUMPDEST
00000258: PUSH0
00000259: DUP2
0000025a: SWAP1
0000025b: POP
0000025c: SWAP2
0000025d: SWAP1
0000025e: POP
0000025f: JUMP
Segment 55
JUMP/JUMPI: tgt address at the end: 0x236
00000260: JUMPDEST
00000261: PUSH2 0x0269
00000264: DUP4
00000265: PUSH2 0x0236
00000268: JUMP
Segment 56
JUMP/JUMPI: tgt address at the end: 0x257
00000269: JUMPDEST
0000026a: PUSH2 0x027d
0000026d: PUSH2 0x0275
00000270: DUP3
00000271: PUSH2 0x0257
00000274: JUMP
Segment 57
JUMP/JUMPI: tgt address at the end: 0x1d3
00000275: JUMPDEST
00000276: DUP5
00000277: DUP5
00000278: SLOAD
00000279: PUSH2 0x01d3
0000027c: JUMP
Segment 58
JUMP/JUMPI: tgt address at the end: Peek(5)
0000027d: JUMPDEST
0000027e: DUP3
0000027f: SSTORE
00000280: POP
00000281: POP
00000282: POP
00000283: POP
00000284: JUMP
Segment 59
JUMP/JUMPI: tgt address at the end: Peek(0)
00000285: JUMPDEST
00000286: PUSH0
00000287: SWAP1
00000288: JUMP
Segment 60
JUMP/JUMPI: tgt address at the end: 0x285
00000289: JUMPDEST
0000028a: PUSH2 0x0291
0000028d: PUSH2 0x0285
00000290: JUMP
Segment 61
JUMP/JUMPI: tgt address at the end: 0x260
00000291: JUMPDEST
00000292: PUSH2 0x029c
00000295: DUP2
00000296: DUP5
00000297: DUP5
00000298: PUSH2 0x0260
0000029b: JUMP
Segment 62
JUMP/JUMPI: tgt address at the end: Peek(3)
0000029c: JUMPDEST
0000029d: POP
0000029e: POP
0000029f: POP
000002a0: JUMP
Segment 63
CONT: PC of instruction after last is:  0x2a2
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
000002a1: JUMPDEST
Segment 64
JUMP/JUMPI: tgt address at the end: 0x2bf
000002a2: JUMPDEST
000002a3: DUP2
000002a4: DUP2
000002a5: LT
000002a6: ISZERO
000002a7: PUSH2 0x02bf
000002aa: JUMPI
Segment 65
JUMP/JUMPI: tgt address at the end: 0x289
000002ab: PUSH2 0x02b4
000002ae: PUSH0
000002af: DUP3
000002b0: PUSH2 0x0289
000002b3: JUMP
Segment 66
JUMP/JUMPI: tgt address at the end: 0x2a2
000002b4: JUMPDEST
000002b5: PUSH1 0x01
000002b7: DUP2
000002b8: ADD
000002b9: SWAP1
000002ba: POP
000002bb: PUSH2 0x02a2
000002be: JUMP
Segment 67
JUMP/JUMPI: tgt address at the end: Peek(2)
000002bf: JUMPDEST
000002c0: POP
000002c1: POP
000002c2: JUMP
Segment 68
JUMP/JUMPI: tgt address at the end: 0x304
000002c3: JUMPDEST
000002c4: PUSH1 0x1f
000002c6: DUP3
000002c7: GT
000002c8: ISZERO
000002c9: PUSH2 0x0304
000002cc: JUMPI
Segment 69
JUMP/JUMPI: tgt address at the end: 0x1a6
000002cd: PUSH2 0x02d5
000002d0: DUP2
000002d1: PUSH2 0x01a6
000002d4: JUMP
Segment 70
JUMP/JUMPI: tgt address at the end: 0x1b8
000002d5: JUMPDEST
000002d6: PUSH2 0x02de
000002d9: DUP5
000002da: PUSH2 0x01b8
000002dd: JUMP
Segment 71
JUMP/JUMPI: tgt address at the end: 0x2ed
000002de: JUMPDEST
000002df: DUP2
000002e0: ADD
000002e1: PUSH1 0x20
000002e3: DUP6
000002e4: LT
000002e5: ISZERO
000002e6: PUSH2 0x02ed
000002e9: JUMPI
Segment 72
CONT: PC of instruction after last is:  0x2ed
WeakestPre Operands:2
WeakestPre Capacity:1
Net Stack Effect:0
000002ea: DUP2
000002eb: SWAP1
000002ec: POP
Segment 73
JUMP/JUMPI: tgt address at the end: 0x1b8
000002ed: JUMPDEST
000002ee: PUSH2 0x0301
000002f1: PUSH2 0x02f9
000002f4: DUP6
000002f5: PUSH2 0x01b8
000002f8: JUMP
Segment 74
JUMP/JUMPI: tgt address at the end: 0x2a1
000002f9: JUMPDEST
000002fa: DUP4
000002fb: ADD
000002fc: DUP3
000002fd: PUSH2 0x02a1
00000300: JUMP
Segment 75
CONT: PC of instruction after last is:  0x304
WeakestPre Operands:2
WeakestPre Capacity:0
Net Stack Effect:-2
00000301: JUMPDEST
00000302: POP
00000303: POP
Segment 76
JUMP/JUMPI: tgt address at the end: Peek(3)
00000304: JUMPDEST
00000305: POP
00000306: POP
00000307: POP
00000308: JUMP
Segment 77
JUMP/JUMPI: tgt address at the end: Peek(2)
00000309: JUMPDEST
0000030a: PUSH0
0000030b: DUP3
0000030c: DUP3
0000030d: SHR
0000030e: SWAP1
0000030f: POP
00000310: SWAP3
00000311: SWAP2
00000312: POP
00000313: POP
00000314: JUMP
Segment 78
JUMP/JUMPI: tgt address at the end: 0x309
00000315: JUMPDEST
00000316: PUSH0
00000317: PUSH2 0x0324
0000031a: PUSH0
0000031b: NOT
0000031c: DUP5
0000031d: PUSH1 0x08
0000031f: MUL
00000320: PUSH2 0x0309
00000323: JUMP
Segment 79
JUMP/JUMPI: tgt address at the end: Peek(4)
00000324: JUMPDEST
00000325: NOT
00000326: DUP1
00000327: DUP4
00000328: AND
00000329: SWAP2
0000032a: POP
0000032b: POP
0000032c: SWAP3
0000032d: SWAP2
0000032e: POP
0000032f: POP
00000330: JUMP
Segment 80
JUMP/JUMPI: tgt address at the end: 0x315
00000331: JUMPDEST
00000332: PUSH0
00000333: PUSH2 0x033c
00000336: DUP4
00000337: DUP4
00000338: PUSH2 0x0315
0000033b: JUMP
Segment 81
JUMP/JUMPI: tgt address at the end: Peek(4)
0000033c: JUMPDEST
0000033d: SWAP2
0000033e: POP
0000033f: DUP3
00000340: PUSH1 0x02
00000342: MUL
00000343: DUP3
00000344: OR
00000345: SWAP1
00000346: POP
00000347: SWAP3
00000348: SWAP2
00000349: POP
0000034a: POP
0000034b: JUMP
Segment 82
JUMP/JUMPI: tgt address at the end: 0x112
0000034c: JUMPDEST
0000034d: PUSH2 0x0356
00000350: DUP4
00000351: DUP4
00000352: PUSH2 0x0112
00000355: JUMP
Segment 83
JUMP/JUMPI: tgt address at the end: 0x36f
00000356: JUMPDEST
00000357: PUSH8 0xffffffffffffffff
00000360: DUP2
00000361: GT
00000362: ISZERO
00000363: PUSH2 0x036f
00000366: JUMPI
Segment 84
JUMP/JUMPI: tgt address at the end: 0x11c
00000367: PUSH2 0x036e
0000036a: PUSH2 0x011c
0000036d: JUMP
Segment 85
CONT: PC of instruction after last is:  0x36f
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
0000036e: JUMPDEST
Segment 86
JUMP/JUMPI: tgt address at the end: 0x176
0000036f: JUMPDEST
00000370: PUSH2 0x0379
00000373: DUP3
00000374: SLOAD
00000375: PUSH2 0x0176
00000378: JUMP
Segment 87
JUMP/JUMPI: tgt address at the end: 0x2c3
00000379: JUMPDEST
0000037a: PUSH2 0x0384
0000037d: DUP3
0000037e: DUP3
0000037f: DUP6
00000380: PUSH2 0x02c3
00000383: JUMP
Segment 88
JUMP/JUMPI: tgt address at the end: 0x3b1
00000384: JUMPDEST
00000385: PUSH0
00000386: PUSH1 0x1f
00000388: DUP4
00000389: GT
0000038a: PUSH1 0x01
0000038c: DUP2
0000038d: EQ
0000038e: PUSH2 0x03b1
00000391: JUMPI
Segment 89
JUMP/JUMPI: tgt address at the end: 0x39f
00000392: PUSH0
00000393: DUP5
00000394: ISZERO
00000395: PUSH2 0x039f
00000398: JUMPI
Segment 90
CONT: PC of instruction after last is:  0x39f
WeakestPre Operands:7
WeakestPre Capacity:2
Net Stack Effect:0
00000399: DUP3
0000039a: DUP8
0000039b: ADD
0000039c: CALLDATALOAD
0000039d: SWAP1
0000039e: POP
Segment 91
JUMP/JUMPI: tgt address at the end: 0x331
0000039f: JUMPDEST
000003a0: PUSH2 0x03a9
000003a3: DUP6
000003a4: DUP3
000003a5: PUSH2 0x0331
000003a8: JUMP
Segment 92
JUMP/JUMPI: tgt address at the end: 0x410
000003a9: JUMPDEST
000003aa: DUP7
000003ab: SSTORE
000003ac: POP
000003ad: PUSH2 0x0410
000003b0: JUMP
Segment 93
JUMP/JUMPI: tgt address at the end: 0x1a6
000003b1: JUMPDEST
000003b2: PUSH1 0x1f
000003b4: NOT
000003b5: DUP5
000003b6: AND
000003b7: PUSH2 0x03bf
000003ba: DUP7
000003bb: PUSH2 0x01a6
000003be: JUMP
Segment 94
CONT: PC of instruction after last is:  0x3c1
WeakestPre Operands:0
WeakestPre Capacity:1
Net Stack Effect:1
000003bf: JUMPDEST
000003c0: PUSH0
Segment 95
JUMP/JUMPI: tgt address at the end: 0x3e6
000003c1: JUMPDEST
000003c2: DUP3
000003c3: DUP2
000003c4: LT
000003c5: ISZERO
000003c6: PUSH2 0x03e6
000003c9: JUMPI
Segment 96
JUMP/JUMPI: tgt address at the end: 0x3c1
000003ca: DUP5
000003cb: DUP10
000003cc: ADD
000003cd: CALLDATALOAD
000003ce: DUP3
000003cf: SSTORE
000003d0: PUSH1 0x01
000003d2: DUP3
000003d3: ADD
000003d4: SWAP2
000003d5: POP
000003d6: PUSH1 0x20
000003d8: DUP6
000003d9: ADD
000003da: SWAP5
000003db: POP
000003dc: PUSH1 0x20
000003de: DUP2
000003df: ADD
000003e0: SWAP1
000003e1: POP
000003e2: PUSH2 0x03c1
000003e5: JUMP
Segment 97
JUMP/JUMPI: tgt address at the end: 0x403
000003e6: JUMPDEST
000003e7: DUP7
000003e8: DUP4
000003e9: LT
000003ea: ISZERO
000003eb: PUSH2 0x0403
000003ee: JUMPI
Segment 98
JUMP/JUMPI: tgt address at the end: 0x315
000003ef: DUP5
000003f0: DUP10
000003f1: ADD
000003f2: CALLDATALOAD
000003f3: PUSH2 0x03ff
000003f6: PUSH1 0x1f
000003f8: DUP10
000003f9: AND
000003fa: DUP3
000003fb: PUSH2 0x0315
000003fe: JUMP
Segment 99
CONT: PC of instruction after last is:  0x403
WeakestPre Operands:4
WeakestPre Capacity:1
Net Stack Effect:-2
000003ff: JUMPDEST
00000400: DUP4
00000401: SSTORE
00000402: POP
Segment 100
CONT: PC of instruction after last is:  0x410
WeakestPre Operands:8
WeakestPre Capacity:3
Net Stack Effect:-3
00000403: JUMPDEST
00000404: PUSH1 0x01
00000406: PUSH1 0x02
00000408: DUP9
00000409: MUL
0000040a: ADD
0000040b: DUP9
0000040c: SSTORE
0000040d: POP
0000040e: POP
0000040f: POP
Segment 101
JUMP/JUMPI: tgt address at the end: Peek(7)
00000410: JUMPDEST
00000411: POP
00000412: POP
00000413: POP
00000414: POP
00000415: POP
00000416: POP
00000417: POP
00000418: JUMP
Segment 102
00000419: INVALID 
Segment 103
0000041a: LOG2
0000041b: PUSH5 0x6970667358
00000421: INVALID 
Segment 104
00000422: SLT
00000423: KECCAK256
00000424: INVALID 
Segment 105
00000425: PUSH18 0x96a2066aa3581f5829bbdb1609bc46ca0e37
00000438: PUSH4 0x57c4a9f6
0000043d: INVALID 
Segment 106
0000043e: INVALID not enough arguments for opcode PUSH32
