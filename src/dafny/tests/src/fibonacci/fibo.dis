
Dafny program verifier finished with 4 verified, 0 errors
Segments:
Segment 0
JUMP/JUMPI: tgt address at the end: 0x10
00000000: PUSH1 0x80
00000002: PUSH1 0x40
00000004: MSTORE
00000005: CALLVALUE
00000006: DUP1
00000007: ISZERO
00000008: PUSH2 0x0010
0000000b: JUMPI
Segment 1
CONT: PC of instruction after last is:  0x10
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
0000000c: PUSH1 0x00
0000000e: DUP1
0000000f: REVERT
Segment 2
JUMP/JUMPI: tgt address at the end: 0x36
00000010: JUMPDEST
00000011: POP
00000012: PUSH1 0x04
00000014: CALLDATASIZE
00000015: LT
00000016: PUSH2 0x0036
00000019: JUMPI
Segment 3
JUMP/JUMPI: tgt address at the end: 0x3b
0000001a: PUSH1 0x00
0000001c: CALLDATALOAD
0000001d: PUSH1 0xe0
0000001f: SHR
00000020: DUP1
00000021: PUSH4 0x139c7ad4
00000026: EQ
00000027: PUSH2 0x003b
0000002a: JUMPI
Segment 4
JUMP/JUMPI: tgt address at the end: 0x64
0000002b: DUP1
0000002c: PUSH4 0xc6c2ea17
00000031: EQ
00000032: PUSH2 0x0064
00000035: JUMPI
Segment 5
CONT: PC of instruction after last is:  0x3b
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
00000036: JUMPDEST
00000037: PUSH1 0x00
00000039: DUP1
0000003a: REVERT
Segment 6
JUMP/JUMPI: tgt address at the end: 0x152
0000003b: JUMPDEST
0000003c: PUSH2 0x004e
0000003f: PUSH2 0x0049
00000042: CALLDATASIZE
00000043: PUSH1 0x04
00000045: PUSH2 0x0152
00000048: JUMP
Segment 7
JUMP/JUMPI: tgt address at the end: 0x85
00000049: JUMPDEST
0000004a: PUSH2 0x0085
0000004d: JUMP
Segment 8
JUMP/JUMPI: tgt address at the end: 0x1c7
0000004e: JUMPDEST
0000004f: PUSH1 0x40
00000051: MLOAD
00000052: PUSH2 0x005b
00000055: SWAP2
00000056: SWAP1
00000057: PUSH2 0x01c7
0000005a: JUMP
Segment 9
0000005b: JUMPDEST
0000005c: PUSH1 0x40
0000005e: MLOAD
0000005f: DUP1
00000060: SWAP2
00000061: SUB
00000062: SWAP1
00000063: RETURN
Segment 10
JUMP/JUMPI: tgt address at the end: 0x20b
00000064: JUMPDEST
00000065: PUSH2 0x0077
00000068: PUSH2 0x0072
0000006b: CALLDATASIZE
0000006c: PUSH1 0x04
0000006e: PUSH2 0x020b
00000071: JUMP
Segment 11
JUMP/JUMPI: tgt address at the end: 0x124
00000072: JUMPDEST
00000073: PUSH2 0x0124
00000076: JUMP
Segment 12
JUMP/JUMPI: tgt address at the end: 0x5b
00000077: JUMPDEST
00000078: PUSH1 0x40
0000007a: MLOAD
0000007b: SWAP1
0000007c: DUP2
0000007d: MSTORE
0000007e: PUSH1 0x20
00000080: ADD
00000081: PUSH2 0x005b
00000084: JUMP
Segment 13
JUMP/JUMPI: tgt address at the end: 0xa0
00000085: JUMPDEST
00000086: PUSH1 0x60
00000088: DUP2
00000089: PUSH8 0xffffffffffffffff
00000092: DUP2
00000093: GT
00000094: ISZERO
00000095: PUSH2 0x00a0
00000098: JUMPI
Segment 14
JUMP/JUMPI: tgt address at the end: 0x224
00000099: PUSH2 0x00a0
0000009c: PUSH2 0x0224
0000009f: JUMP
Segment 15
JUMP/JUMPI: tgt address at the end: 0xc9
000000a0: JUMPDEST
000000a1: PUSH1 0x40
000000a3: MLOAD
000000a4: SWAP1
000000a5: DUP1
000000a6: DUP3
000000a7: MSTORE
000000a8: DUP1
000000a9: PUSH1 0x20
000000ab: MUL
000000ac: PUSH1 0x20
000000ae: ADD
000000af: DUP3
000000b0: ADD
000000b1: PUSH1 0x40
000000b3: MSTORE
000000b4: DUP1
000000b5: ISZERO
000000b6: PUSH2 0x00c9
000000b9: JUMPI
Segment 16
CONT: PC of instruction after last is:  0xc9
WeakestPre Operands:2
WeakestPre Capacity:6
Net Stack Effect:4
000000ba: DUP2
000000bb: PUSH1 0x20
000000bd: ADD
000000be: PUSH1 0x20
000000c0: DUP3
000000c1: MUL
000000c2: DUP1
000000c3: CALLDATASIZE
000000c4: DUP4
000000c5: CALLDATACOPY
000000c6: ADD
000000c7: SWAP1
000000c8: POP
Segment 17
CONT: PC of instruction after last is:  0xcf
WeakestPre Operands:3
WeakestPre Capacity:0
Net Stack Effect:-1
000000c9: JUMPDEST
000000ca: POP
000000cb: SWAP1
000000cc: POP
000000cd: PUSH1 0x00
Segment 18
JUMP/JUMPI: tgt address at the end: 0x11d
000000cf: JUMPDEST
000000d0: DUP3
000000d1: DUP2
000000d2: LT
000000d3: ISZERO
000000d4: PUSH2 0x011d
000000d7: JUMPI
Segment 19
JUMP/JUMPI: tgt address at the end: 0xec
000000d8: PUSH2 0x00f8
000000db: DUP5
000000dc: DUP5
000000dd: DUP4
000000de: DUP2
000000df: DUP2
000000e0: LT
000000e1: PUSH2 0x00ec
000000e4: JUMPI
Segment 20
JUMP/JUMPI: tgt address at the end: 0x23a
000000e5: PUSH2 0x00ec
000000e8: PUSH2 0x023a
000000eb: JUMP
Segment 21
JUMP/JUMPI: tgt address at the end: 0x124
000000ec: JUMPDEST
000000ed: SWAP1
000000ee: POP
000000ef: PUSH1 0x20
000000f1: MUL
000000f2: ADD
000000f3: CALLDATALOAD
000000f4: PUSH2 0x0124
000000f7: JUMP
Segment 22
JUMP/JUMPI: tgt address at the end: 0x10a
000000f8: JUMPDEST
000000f9: DUP3
000000fa: DUP3
000000fb: DUP2
000000fc: MLOAD
000000fd: DUP2
000000fe: LT
000000ff: PUSH2 0x010a
00000102: JUMPI
Segment 23
JUMP/JUMPI: tgt address at the end: 0x23a
00000103: PUSH2 0x010a
00000106: PUSH2 0x023a
00000109: JUMP
Segment 24
JUMP/JUMPI: tgt address at the end: 0xcf
0000010a: JUMPDEST
0000010b: PUSH1 0x20
0000010d: SWAP1
0000010e: DUP2
0000010f: MUL
00000110: SWAP2
00000111: SWAP1
00000112: SWAP2
00000113: ADD
00000114: ADD
00000115: MSTORE
00000116: PUSH1 0x01
00000118: ADD
00000119: PUSH2 0x00cf
0000011c: JUMP
Segment 25
JUMP/JUMPI: tgt address at the end: Peek(4)
0000011d: JUMPDEST
0000011e: POP
0000011f: SWAP3
00000120: SWAP2
00000121: POP
00000122: POP
00000123: JUMP
Segment 26
JUMP/JUMPI: tgt address at the end: 0x133
00000124: JUMPDEST
00000125: PUSH1 0x00
00000127: PUSH1 0x02
00000129: DUP3
0000012a: LT
0000012b: ISZERO
0000012c: PUSH2 0x0133
0000012f: JUMPI
Segment 27
JUMP/JUMPI: tgt address at the end: Peek(2)
00000130: POP
00000131: SWAP1
00000132: JUMP
Segment 28
JUMP/JUMPI: tgt address at the end: 0x124
00000133: JUMPDEST
00000134: PUSH2 0x013f
00000137: PUSH1 0x02
00000139: DUP4
0000013a: SUB
0000013b: PUSH2 0x0124
0000013e: JUMP
Segment 29
JUMP/JUMPI: tgt address at the end: 0x124
0000013f: JUMPDEST
00000140: PUSH2 0x014b
00000143: PUSH1 0x01
00000145: DUP5
00000146: SUB
00000147: PUSH2 0x0124
0000014a: JUMP
Segment 30
JUMP/JUMPI: tgt address at the end: Peek(4)
0000014b: JUMPDEST
0000014c: ADD
0000014d: SWAP3
0000014e: SWAP2
0000014f: POP
00000150: POP
00000151: JUMP
Segment 31
JUMP/JUMPI: tgt address at the end: 0x165
00000152: JUMPDEST
00000153: PUSH1 0x00
00000155: DUP1
00000156: PUSH1 0x20
00000158: DUP4
00000159: DUP6
0000015a: SUB
0000015b: SLT
0000015c: ISZERO
0000015d: PUSH2 0x0165
00000160: JUMPI
Segment 32
CONT: PC of instruction after last is:  0x165
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
00000161: PUSH1 0x00
00000163: DUP1
00000164: REVERT
Segment 33
JUMP/JUMPI: tgt address at the end: 0x17d
00000165: JUMPDEST
00000166: DUP3
00000167: CALLDATALOAD
00000168: PUSH8 0xffffffffffffffff
00000171: DUP1
00000172: DUP3
00000173: GT
00000174: ISZERO
00000175: PUSH2 0x017d
00000178: JUMPI
Segment 34
CONT: PC of instruction after last is:  0x17d
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
00000179: PUSH1 0x00
0000017b: DUP1
0000017c: REVERT
Segment 35
JUMP/JUMPI: tgt address at the end: 0x191
0000017d: JUMPDEST
0000017e: DUP2
0000017f: DUP6
00000180: ADD
00000181: SWAP2
00000182: POP
00000183: DUP6
00000184: PUSH1 0x1f
00000186: DUP4
00000187: ADD
00000188: SLT
00000189: PUSH2 0x0191
0000018c: JUMPI
Segment 36
CONT: PC of instruction after last is:  0x191
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
0000018d: PUSH1 0x00
0000018f: DUP1
00000190: REVERT
Segment 37
JUMP/JUMPI: tgt address at the end: 0x1a0
00000191: JUMPDEST
00000192: DUP2
00000193: CALLDATALOAD
00000194: DUP2
00000195: DUP2
00000196: GT
00000197: ISZERO
00000198: PUSH2 0x01a0
0000019b: JUMPI
Segment 38
CONT: PC of instruction after last is:  0x1a0
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
0000019c: PUSH1 0x00
0000019e: DUP1
0000019f: REVERT
Segment 39
JUMP/JUMPI: tgt address at the end: 0x1b5
000001a0: JUMPDEST
000001a1: DUP7
000001a2: PUSH1 0x20
000001a4: DUP3
000001a5: PUSH1 0x05
000001a7: SHL
000001a8: DUP6
000001a9: ADD
000001aa: ADD
000001ab: GT
000001ac: ISZERO
000001ad: PUSH2 0x01b5
000001b0: JUMPI
Segment 40
CONT: PC of instruction after last is:  0x1b5
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
000001b1: PUSH1 0x00
000001b3: DUP1
000001b4: REVERT
Segment 41
JUMP/JUMPI: tgt address at the end: Peek(7)
000001b5: JUMPDEST
000001b6: PUSH1 0x20
000001b8: SWAP3
000001b9: SWAP1
000001ba: SWAP3
000001bb: ADD
000001bc: SWAP7
000001bd: SWAP2
000001be: SWAP6
000001bf: POP
000001c0: SWAP1
000001c1: SWAP4
000001c2: POP
000001c3: POP
000001c4: POP
000001c5: POP
000001c6: JUMP
Segment 42
CONT: PC of instruction after last is:  0x1e3
WeakestPre Operands:2
WeakestPre Capacity:6
Net Stack Effect:6
000001c7: JUMPDEST
000001c8: PUSH1 0x20
000001ca: DUP1
000001cb: DUP3
000001cc: MSTORE
000001cd: DUP3
000001ce: MLOAD
000001cf: DUP3
000001d0: DUP3
000001d1: ADD
000001d2: DUP2
000001d3: SWAP1
000001d4: MSTORE
000001d5: PUSH1 0x00
000001d7: SWAP2
000001d8: SWAP1
000001d9: DUP5
000001da: DUP3
000001db: ADD
000001dc: SWAP1
000001dd: PUSH1 0x40
000001df: DUP6
000001e0: ADD
000001e1: SWAP1
000001e2: DUP5
Segment 43
JUMP/JUMPI: tgt address at the end: 0x1ff
000001e3: JUMPDEST
000001e4: DUP2
000001e5: DUP2
000001e6: LT
000001e7: ISZERO
000001e8: PUSH2 0x01ff
000001eb: JUMPI
Segment 44
JUMP/JUMPI: tgt address at the end: 0x1e3
000001ec: DUP4
000001ed: MLOAD
000001ee: DUP4
000001ef: MSTORE
000001f0: SWAP3
000001f1: DUP5
000001f2: ADD
000001f3: SWAP3
000001f4: SWAP2
000001f5: DUP5
000001f6: ADD
000001f7: SWAP2
000001f8: PUSH1 0x01
000001fa: ADD
000001fb: PUSH2 0x01e3
000001fe: JUMP
Segment 45
JUMP/JUMPI: tgt address at the end: Peek(8)
000001ff: JUMPDEST
00000200: POP
00000201: SWAP1
00000202: SWAP7
00000203: SWAP6
00000204: POP
00000205: POP
00000206: POP
00000207: POP
00000208: POP
00000209: POP
0000020a: JUMP
Segment 46
JUMP/JUMPI: tgt address at the end: 0x21d
0000020b: JUMPDEST
0000020c: PUSH1 0x00
0000020e: PUSH1 0x20
00000210: DUP3
00000211: DUP5
00000212: SUB
00000213: SLT
00000214: ISZERO
00000215: PUSH2 0x021d
00000218: JUMPI
Segment 47
CONT: PC of instruction after last is:  0x21d
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
00000219: PUSH1 0x00
0000021b: DUP1
0000021c: REVERT
Segment 48
JUMP/JUMPI: tgt address at the end: Could not determine stack value
0000021d: JUMPDEST
0000021e: POP
0000021f: CALLDATALOAD
00000220: SWAP2
00000221: SWAP1
00000222: POP
00000223: JUMP
Segment 49
CONT: PC of instruction after last is:  0x23a
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
00000224: JUMPDEST
00000225: PUSH4 0x4e487b71
0000022a: PUSH1 0xe0
0000022c: SHL
0000022d: PUSH1 0x00
0000022f: MSTORE
00000230: PUSH1 0x41
00000232: PUSH1 0x04
00000234: MSTORE
00000235: PUSH1 0x24
00000237: PUSH1 0x00
00000239: REVERT
Segment 50
CONT: PC of instruction after last is:  0x250
WeakestPre Operands:0
WeakestPre Capacity:2
Net Stack Effect:2
0000023a: JUMPDEST
0000023b: PUSH4 0x4e487b71
00000240: PUSH1 0xe0
00000242: SHL
00000243: PUSH1 0x00
00000245: MSTORE
00000246: PUSH1 0x32
00000248: PUSH1 0x04
0000024a: MSTORE
0000024b: PUSH1 0x24
0000024d: PUSH1 0x00
0000024f: REVERT
Segment 51
JUMP/JUMPI: tgt address at the end: Could not determine stack value
00000250: INVALID 
00000251: LOG2
00000252: PUSH5 0x6970667358
00000258: INVALID 
00000259: SLT
0000025a: KECCAK256
0000025b: MSTORE
0000025c: JUMPI
Segment 52
0000025d: CALLDATALOAD
0000025e: INVALID 
0000025f: POP
00000260: SWAP9
00000261: INVALID 
00000262: MLOAD
00000263: DUP14
00000264: CALLER
00000265: PUSH2 0x4f45
00000268: PUSH17 0x069c6f95f5af19e8bfc567985e6005f09d
0000027a: SWAP8
0000027b: PUSH5 0x736f6c6343
00000281: STOP
Segment 53
00000282: ADDMOD
00000283: ISZERO
00000284: STOP
Segment 54
CONT: PC of instruction after last is:  0x286
WeakestPre Operands:0
WeakestPre Capacity:1
Net Stack Effect:1
00000285: CALLER
