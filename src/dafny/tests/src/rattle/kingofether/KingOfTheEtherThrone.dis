
Dafny program verifier did not attempt verification
Segments:
Segment 0
JUMP/JUMPI: tgt address at the end: 0xf
00000000: PUSH1 0x80
00000002: PUSH1 0x40
00000004: MSTORE
00000005: CALLVALUE
00000006: DUP1
00000007: ISZERO
00000008: PUSH2 0x000f
0000000b: JUMPI
Segment 1
0000000c: PUSH0
0000000d: DUP1
0000000e: REVERT
Segment 2
JUMP/JUMPI: tgt address at the end: 0x3f
0000000f: JUMPDEST
00000010: POP
00000011: PUSH1 0x04
00000013: CALLDATASIZE
00000014: LT
00000015: PUSH2 0x003f
00000018: JUMPI
Segment 3
JUMP/JUMPI: tgt address at the end: 0x43
00000019: PUSH0
0000001a: CALLDATALOAD
0000001b: PUSH1 0xe0
0000001d: SHR
0000001e: DUP1
0000001f: PUSH4 0x69deb7b7
00000024: EQ
00000025: PUSH2 0x0043
00000028: JUMPI
Segment 4
JUMP/JUMPI: tgt address at the end: 0x4d
00000029: DUP1
0000002a: PUSH4 0x7842c52d
0000002f: EQ
00000030: PUSH2 0x004d
00000033: JUMPI
Segment 5
JUMP/JUMPI: tgt address at the end: 0x7d
00000034: DUP1
00000035: PUSH4 0xe40d0ac3
0000003a: EQ
0000003b: PUSH2 0x007d
0000003e: JUMPI
Segment 6
0000003f: JUMPDEST
00000040: PUSH0
00000041: DUP1
00000042: REVERT
Segment 7
JUMP/JUMPI: tgt address at the end: 0x9b
00000043: JUMPDEST
00000044: PUSH2 0x004b
00000047: PUSH2 0x009b
0000004a: JUMP
Segment 8
0000004b: JUMPDEST
0000004c: STOP
Segment 9
JUMP/JUMPI: tgt address at the end: 0x14e
0000004d: JUMPDEST
0000004e: PUSH2 0x0067
00000051: PUSH1 0x04
00000053: DUP1
00000054: CALLDATASIZE
00000055: SUB
00000056: DUP2
00000057: ADD
00000058: SWAP1
00000059: PUSH2 0x0062
0000005c: SWAP2
0000005d: SWAP1
0000005e: PUSH2 0x014e
00000061: JUMP
Segment 10
JUMP/JUMPI: tgt address at the end: 0xe8
00000062: JUMPDEST
00000063: PUSH2 0x00e8
00000066: JUMP
Segment 11
JUMP/JUMPI: tgt address at the end: 0x188
00000067: JUMPDEST
00000068: PUSH1 0x40
0000006a: MLOAD
0000006b: PUSH2 0x0074
0000006e: SWAP2
0000006f: SWAP1
00000070: PUSH2 0x0188
00000073: JUMP
Segment 12
00000074: JUMPDEST
00000075: PUSH1 0x40
00000077: MLOAD
00000078: DUP1
00000079: SWAP2
0000007a: SUB
0000007b: SWAP1
0000007c: RETURN
Segment 13
JUMP/JUMPI: tgt address at the end: 0x10d
0000007d: JUMPDEST
0000007e: PUSH2 0x0085
00000081: PUSH2 0x010d
00000084: JUMP
Segment 14
JUMP/JUMPI: tgt address at the end: 0x188
00000085: JUMPDEST
00000086: PUSH1 0x40
00000088: MLOAD
00000089: PUSH2 0x0092
0000008c: SWAP2
0000008d: SWAP1
0000008e: PUSH2 0x0188
00000091: JUMP
Segment 15
00000092: JUMPDEST
00000093: PUSH1 0x40
00000095: MLOAD
00000096: DUP1
00000097: SWAP2
00000098: SUB
00000099: SWAP1
0000009a: RETURN
Segment 16
JUMP/JUMPI: tgt address at the end: Peek(0)
0000009b: JUMPDEST
0000009c: PUSH1 0x01
0000009e: PUSH0
0000009f: SWAP1
000000a0: DUP1
000000a1: PUSH1 0x01
000000a3: DUP2
000000a4: SLOAD
000000a5: ADD
000000a6: DUP1
000000a7: DUP3
000000a8: SSTORE
000000a9: DUP1
000000aa: SWAP2
000000ab: POP
000000ac: POP
000000ad: PUSH1 0x01
000000af: SWAP1
000000b0: SUB
000000b1: SWAP1
000000b2: PUSH0
000000b3: MSTORE
000000b4: PUSH1 0x20
000000b6: PUSH0
000000b7: KECCAK256
000000b8: ADD
000000b9: PUSH0
000000ba: SWAP1
000000bb: SWAP2
000000bc: SWAP1
000000bd: SWAP2
000000be: SWAP1
000000bf: SWAP2
000000c0: POP
000000c1: PUSH0
000000c2: DUP3
000000c3: ADD
000000c4: SLOAD
000000c5: DUP2
000000c6: PUSH0
000000c7: ADD
000000c8: SSTORE
000000c9: POP
000000ca: POP
000000cb: PUSH1 0x40
000000cd: MLOAD
000000ce: DUP1
000000cf: PUSH1 0x20
000000d1: ADD
000000d2: PUSH1 0x40
000000d4: MSTORE
000000d5: DUP1
000000d6: PUSH1 0x06
000000d8: DUP2
000000d9: MSTORE
000000da: POP
000000db: PUSH0
000000dc: DUP1
000000dd: DUP3
000000de: ADD
000000df: MLOAD
000000e0: DUP2
000000e1: PUSH0
000000e2: ADD
000000e3: SSTORE
000000e4: SWAP1
000000e5: POP
000000e6: POP
000000e7: JUMP
Segment 17
JUMP/JUMPI: tgt address at the end: 0xf7
000000e8: JUMPDEST
000000e9: PUSH1 0x01
000000eb: DUP2
000000ec: DUP2
000000ed: SLOAD
000000ee: DUP2
000000ef: LT
000000f0: PUSH2 0x00f7
000000f3: JUMPI
Segment 18
000000f4: PUSH0
000000f5: DUP1
000000f6: REVERT
Segment 19
JUMP/JUMPI: tgt address at the end: Peek(3)
000000f7: JUMPDEST
000000f8: SWAP1
000000f9: PUSH0
000000fa: MSTORE
000000fb: PUSH1 0x20
000000fd: PUSH0
000000fe: KECCAK256
000000ff: ADD
00000100: PUSH0
00000101: SWAP2
00000102: POP
00000103: SWAP1
00000104: POP
00000105: DUP1
00000106: PUSH0
00000107: ADD
00000108: SLOAD
00000109: SWAP1
0000010a: POP
0000010b: DUP2
0000010c: JUMP
Segment 20
JUMP/JUMPI: tgt address at the end: Peek(0)
0000010d: JUMPDEST
0000010e: PUSH0
0000010f: DUP1
00000110: PUSH0
00000111: ADD
00000112: SLOAD
00000113: SWAP1
00000114: POP
00000115: DUP2
00000116: JUMP
Segment 21
00000117: JUMPDEST
00000118: PUSH0
00000119: DUP1
0000011a: REVERT
Segment 22
JUMP/JUMPI: tgt address at the end: Peek(1)
0000011b: JUMPDEST
0000011c: PUSH0
0000011d: DUP2
0000011e: SWAP1
0000011f: POP
00000120: SWAP2
00000121: SWAP1
00000122: POP
00000123: JUMP
Segment 23
JUMP/JUMPI: tgt address at the end: 0x11b
00000124: JUMPDEST
00000125: PUSH2 0x012d
00000128: DUP2
00000129: PUSH2 0x011b
0000012c: JUMP
Segment 24
JUMP/JUMPI: tgt address at the end: 0x137
0000012d: JUMPDEST
0000012e: DUP2
0000012f: EQ
00000130: PUSH2 0x0137
00000133: JUMPI
Segment 25
00000134: PUSH0
00000135: DUP1
00000136: REVERT
Segment 26
JUMP/JUMPI: tgt address at the end: Peek(1)
00000137: JUMPDEST
00000138: POP
00000139: JUMP
Segment 27
JUMP/JUMPI: tgt address at the end: 0x124
0000013a: JUMPDEST
0000013b: PUSH0
0000013c: DUP2
0000013d: CALLDATALOAD
0000013e: SWAP1
0000013f: POP
00000140: PUSH2 0x0148
00000143: DUP2
00000144: PUSH2 0x0124
00000147: JUMP
Segment 28
JUMP/JUMPI: tgt address at the end: Peek(3)
00000148: JUMPDEST
00000149: SWAP3
0000014a: SWAP2
0000014b: POP
0000014c: POP
0000014d: JUMP
Segment 29
JUMP/JUMPI: tgt address at the end: 0x163
0000014e: JUMPDEST
0000014f: PUSH0
00000150: PUSH1 0x20
00000152: DUP3
00000153: DUP5
00000154: SUB
00000155: SLT
00000156: ISZERO
00000157: PUSH2 0x0163
0000015a: JUMPI
Segment 30
JUMP/JUMPI: tgt address at the end: 0x117
0000015b: PUSH2 0x0162
0000015e: PUSH2 0x0117
00000161: JUMP
Segment 31
CONT: PC of instruction after last is:  0x163
WeakestPre Operands:0
WeakestPre Capacity:0
Net Stack Effect:0
00000162: JUMPDEST
Segment 32
JUMP/JUMPI: tgt address at the end: 0x13a
00000163: JUMPDEST
00000164: PUSH0
00000165: PUSH2 0x0170
00000168: DUP5
00000169: DUP3
0000016a: DUP6
0000016b: ADD
0000016c: PUSH2 0x013a
0000016f: JUMP
Segment 33
JUMP/JUMPI: tgt address at the end: Peek(5)
00000170: JUMPDEST
00000171: SWAP2
00000172: POP
00000173: POP
00000174: SWAP3
00000175: SWAP2
00000176: POP
00000177: POP
00000178: JUMP
Segment 34
JUMP/JUMPI: tgt address at the end: 0x11b
00000179: JUMPDEST
0000017a: PUSH2 0x0182
0000017d: DUP2
0000017e: PUSH2 0x011b
00000181: JUMP
Segment 35
JUMP/JUMPI: tgt address at the end: Peek(3)
00000182: JUMPDEST
00000183: DUP3
00000184: MSTORE
00000185: POP
00000186: POP
00000187: JUMP
Segment 36
JUMP/JUMPI: tgt address at the end: 0x179
00000188: JUMPDEST
00000189: PUSH0
0000018a: PUSH1 0x20
0000018c: DUP3
0000018d: ADD
0000018e: SWAP1
0000018f: POP
00000190: PUSH2 0x019b
00000193: PUSH0
00000194: DUP4
00000195: ADD
00000196: DUP5
00000197: PUSH2 0x0179
0000019a: JUMP
Segment 37
JUMP/JUMPI: tgt address at the end: Peek(3)
0000019b: JUMPDEST
0000019c: SWAP3
0000019d: SWAP2
0000019e: POP
0000019f: POP
000001a0: JUMP
Segment 38
000001a1: INVALID 
Segment 39
000001a2: LOG2
000001a3: PUSH5 0x6970667358
000001a9: INVALID 
Segment 40
000001aa: SLT
000001ab: KECCAK256
000001ac: GT
000001ad: EXTCODECOPY
000001ae: INVALID 
Segment 41
000001af: INVALID 
Segment 42
000001b0: AND
000001b1: LOG0
000001b2: CODESIZE
000001b3: SGT
000001b4: INVALID 
Segment 43
000001b5: INVALID 
Segment 44
000001b6: INVALID 
Segment 45
000001b7: PUSH10 0x708a97f91ff1e1b86dd3
000001c2: INVALID 
Segment 46
000001c3: INVALID 
Segment 47
000001c4: LOG2
000001c5: INVALID 
Segment 48
000001c6: INVALID 
Segment 49
000001c7: PUSH9 0x5f5d6d3764736f6c63
000001d1: NUMBER
000001d2: STOP
Segment 50
000001d3: ADDMOD
000001d4: OR
000001d5: STOP
Segment 51
CONT: PC of instruction after last is:  0x1d7
WeakestPre Operands:0
WeakestPre Capacity:1
Net Stack Effect:1
000001d6: CALLER
